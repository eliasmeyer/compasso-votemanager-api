package br.com.compasso.votacao.api.service.verifier;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.assertThatExceptionOfType;

import br.com.compasso.votacao.api.enums.StatusSession;
import br.com.compasso.votacao.api.exception.VotingTimeSessionExpiredException;
import br.com.compasso.votacao.api.helper.TestHelper;
import br.com.compasso.votacao.api.model.Session;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.EnumSource;

class VerifierSessionIsOpenTest {
  
  private final VerifierSessionIsOpen verifierSessionIsOpen = new VerifierSessionIsOpen();
  
  @Test
  @DisplayName("Session is OPEN")
  void testShouldBeOk() {
    Session session = TestHelper.createSession(1L, 1L);
    session.setStatusSession(StatusSession.ABERTO);
    
    assertThat(session.getStatusSession()).isEqualTo(StatusSession.ABERTO);
  }
  
  @ParameterizedTest
  @EnumSource(
      value = StatusSession.class,
      names = {"APURANDO", "FECHADO"})
  @DisplayName("Session is NOT OPEN")
  void testShouldntBeOk(StatusSession statusSession) {
    Session session = TestHelper.createSession(1L, 1L);
    session.setStatusSession(statusSession);
    
    assertThatExceptionOfType(VotingTimeSessionExpiredException.class)
        .isThrownBy(() -> {
          verifierSessionIsOpen.isOk(session);
        });
    
    assertThat(session.getStatusSession()).isNotEqualTo(StatusSession.ABERTO);
  }
}
